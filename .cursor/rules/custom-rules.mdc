---
description: 
globs: 
alwaysApply: false
---
# Issues 目录管理规范

## 目录结构
- `/issues` 目录用于统一管理代码问题与功能开发
  - 采用双层目录结构确保良好组织

## 命名规范
    ### 第一层目录
    - 以里程碑(milestone)命名
    - 格式: `m{序号}-{描述}`
    - 示例: `m001-InitProject`

    ### 第二层文件
    - 每个文件表示一个独立issue
    - 全局唯一ID: 在整个`/issues`目录中保持ID唯一性
    - 文件命名格式:
      - 功能需求: `{id}-f-{描述}.md`
      - 缺陷修复: `{id}-bug-{描述}.md`

## 文件内容规范
    每个issue文件必须包含以下部分:
    1. `#Title`: issue标题
    2. `#Introduction`: issue详细描述
    3. `#Tasks`: 任务列表
       - 每项任务使用`- [ ]`格式标记
       - 子任务可关联其他任务文件
    4. `#Dependencies`: 依赖关系
       - 使用`- [ ]`格式标记依赖的其他issue

## 任务状态管理
    - 仅允许修改任务状态标记，不得随意更改其他内容
    - 状态标记说明:
      - `[ ]`: 未开始
      - `[✓]`: 已完成
      - `[-]`: 进行中
      - `[*]`: 已跳过
      - `[!]`: 已放弃

# 使用JonnyMcp完成方案